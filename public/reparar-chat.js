// Script para limpiar completamente todos los datos relacionados con chat
// Ejecutar en la consola del navegador

console.log('üßπ ELIMINANDO TODOS LOS DATOS DE CHAT');
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');

function eliminarTodoChat() {
  try {
    console.log('\nüóëÔ∏è  LIMPIANDO DATOS DE CHAT...\n');
    
    // 1. Eliminar mensajes de chat
    const chatMessages = localStorage.getItem('smart-student-chat-messages');
    if (chatMessages) {
      localStorage.removeItem('smart-student-chat-messages');
      console.log('‚úÖ Mensajes de chat eliminados');
    } else {
      console.log('‚ÑπÔ∏è  No hab√≠a mensajes de chat almacenados');
    }
    
    // 2. Limpiar configuraciones de chat
    const chatConfig = localStorage.getItem('smart-student-chat-config');
    if (chatConfig) {
      localStorage.removeItem('smart-student-chat-config');
      console.log('‚úÖ Configuraci√≥n de chat eliminada');
    }
    
    // 3. Limpiar notificaciones de chat
    const chatNotifications = localStorage.getItem('smart-student-chat-notifications');
    if (chatNotifications) {
      localStorage.removeItem('smart-student-chat-notifications');
      console.log('‚úÖ Notificaciones de chat eliminadas');
    }
    
    // 4. Limpiar datos de usuarios relacionados con chat (opcional)
    const users = JSON.parse(localStorage.getItem('smart-student-users') || '[]');
    let usuariosModificados = false;
    
    const usuariosLimpios = users.map(user => {
      const userCopy = { ...user };
      
      // Mantener assignedTeachers para funcionalidad acad√©mica, pero limpiar propiedades espec√≠ficas de chat
      if (userCopy.chatSettings) {
        delete userCopy.chatSettings;
        usuariosModificados = true;
      }
      
      if (userCopy.lastChatActivity) {
        delete userCopy.lastChatActivity;
        usuariosModificados = true;
      }
      
      if (userCopy.chatPreferences) {
        delete userCopy.chatPreferences;
        usuariosModificados = true;
      }
      
      return userCopy;
    });
    
    if (usuariosModificados) {
      localStorage.setItem('smart-student-users', JSON.stringify(usuariosLimpios));
      console.log('‚úÖ Propiedades de chat eliminadas de usuarios');
    } else {
      console.log('‚ÑπÔ∏è  No hab√≠a propiedades de chat en usuarios');
    }
    
    // 5. Verificar limpieza
    console.log('\nüîç VERIFICANDO LIMPIEZA...\n');
    
    const keysRelacionadasChat = [];
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key && key.toLowerCase().includes('chat')) {
        keysRelacionadasChat.push(key);
      }
    }
    
    if (keysRelacionadasChat.length > 0) {
      console.log('‚ö†Ô∏è  A√∫n quedan estas claves relacionadas con chat:');
      keysRelacionadasChat.forEach(key => {
        console.log(`   ‚Ä¢ ${key}`);
        // Opcionalmente eliminar
        localStorage.removeItem(key);
      });
      console.log('‚úÖ Claves restantes eliminadas');
    } else {
      console.log('‚úÖ No quedan datos de chat en localStorage');
    }
    
    console.log('\nüéâ LIMPIEZA COMPLETA REALIZADA');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('‚úÖ Mensajes de chat eliminados');
    console.log('‚úÖ Configuraciones de chat eliminadas');
    console.log('‚úÖ Notificaciones de chat eliminadas');
    console.log('‚úÖ Propiedades de chat en usuarios eliminadas');
    console.log('‚úÖ Sistema limpio de funcionalidad de chat');
    
    console.log('\nüí° RESULTADO:');
    console.log('‚Ä¢ La funcionalidad de chat ha sido completamente eliminada');
    console.log('‚Ä¢ Los datos acad√©micos (profesores, estudiantes, cursos) se mantienen');
    console.log('‚Ä¢ El sistema est√° limpio y listo para usar sin chat');
    
    return {
      chatMessagesRemoved: !!chatMessages,
      chatConfigRemoved: !!chatConfig,
      chatNotificationsRemoved: !!chatNotifications,
      userPropertiesCleaned: usuariosModificados,
      additionalKeysRemoved: keysRelacionadasChat.length
    };
    
  } catch (error) {
    console.error('‚ùå Error durante la limpieza:', error);
    return { error: error.message };
  }
}

function verificarEstadoSinChat() {
  console.log('\nüîç VERIFICANDO ESTADO DEL SISTEMA SIN CHAT...\n');
  
  // Verificar que no hay datos de chat
  const chatData = [
    'smart-student-chat-messages',
    'smart-student-chat-config', 
    'smart-student-chat-notifications'
  ];
  
  let todoLimpio = true;
  
  chatData.forEach(key => {
    const data = localStorage.getItem(key);
    if (data) {
      console.log(`‚ùå A√∫n existe: ${key}`);
      todoLimpio = false;
    } else {
      console.log(`‚úÖ Limpio: ${key}`);
    }
  });
  
  // Verificar usuarios
  const users = JSON.parse(localStorage.getItem('smart-student-users') || '[]');
  console.log(`\nüë• USUARIOS: ${users.length} encontrados`);
  
  const roles = {
    admin: 0,
    teacher: 0,
    student: 0
  };
  
  users.forEach(user => {
    roles[user.role]++;
  });
  
  console.log(`   üìä Administradores: ${roles.admin}`);
  console.log(`   üìä Profesores: ${roles.teacher}`);
  console.log(`   üìä Estudiantes: ${roles.student}`);
  
  // Verificar funcionalidades disponibles
  console.log('\nüõ†Ô∏è  FUNCIONALIDADES DISPONIBLES:');
  console.log('   ‚úÖ Biblioteca Digital');
  console.log('   ‚úÖ Generador de Res√∫menes');
  console.log('   ‚úÖ Mapas Mentales');
  console.log('   ‚úÖ Cuestionarios');
  console.log('   ‚úÖ Evaluaciones');
  console.log('   ‚úÖ Gesti√≥n de Usuarios (Admin)');
  console.log('   ‚úÖ Solicitudes de Contrase√±a (Admin)');
  console.log('   ‚ùå Chat (Eliminado)');
  
  if (todoLimpio) {
    console.log('\nüéâ SISTEMA COMPLETAMENTE LIMPIO');
    console.log('El chat ha sido eliminado exitosamente');
  } else {
    console.log('\n‚ö†Ô∏è  LIMPIEZA INCOMPLETA');
    console.log('Ejecuta eliminarTodoChat() nuevamente');
  }
  
  return {
    isClean: todoLimpio,
    userCount: users.length,
    roles: roles
  };
}

function restaurarSistemaLimpio() {
  console.log('\nüîÑ RESTAURANDO SISTEMA A ESTADO LIMPIO...\n');
  
  // Eliminar todo y crear solo usuarios b√°sicos
  const usuariosBasicos = [
    {
      username: 'admin',
      displayName: 'Administrador del Sistema',
      email: 'admin@smartstudent.com',
      role: 'admin',
      activeCourses: [],
      password: '1234'
    },
    {
      username: 'profesor1',
      displayName: 'Profesor Demo',
      email: 'profesor@teacher.com',
      role: 'teacher',
      activeCourses: ['4to B√°sico', '5to B√°sico'],
      teachingSubjects: ['Matem√°ticas', 'Ciencias Naturales'],
      password: '1234'
    },
    {
      username: 'estudiante1',
      displayName: 'Estudiante Demo',
      email: 'estudiante@student.com',
      role: 'student',
      activeCourses: ['4to B√°sico'],
      password: '1234'
    }
  ];
  
  // Limpiar todo
  eliminarTodoChat();
  
  // Restaurar usuarios b√°sicos
  localStorage.setItem('smart-student-users', JSON.stringify(usuariosBasicos));
  
  console.log('‚úÖ Sistema restaurado con usuarios b√°sicos');
  console.log('‚úÖ Sin funcionalidad de chat');
  console.log('‚úÖ Listo para usar');
  
  console.log('\nüë• USUARIOS DISPONIBLES:');
  console.log('   ‚Ä¢ admin / 1234 (Administrador)');
  console.log('   ‚Ä¢ profesor1 / 1234 (Profesor)');
  console.log('   ‚Ä¢ estudiante1 / 1234 (Estudiante)');
  
  return { restored: true, users: usuariosBasicos.length };
}

// Exportar funciones
window.eliminarTodoChat = eliminarTodoChat;
window.verificarEstadoSinChat = verificarEstadoSinChat;
window.restaurarSistemaLimpio = restaurarSistemaLimpio;

console.log('\nüöÄ FUNCIONES DISPONIBLES:');
console.log('   ‚Ä¢ eliminarTodoChat() - Eliminar todos los datos de chat');
console.log('   ‚Ä¢ verificarEstadoSinChat() - Verificar que el sistema est√° limpio');
console.log('   ‚Ä¢ restaurarSistemaLimpio() - Restaurar sistema sin chat');

console.log('\nüí° RECOMENDACI√ìN:');
console.log('1. Ejecuta: eliminarTodoChat()');
console.log('2. Recarga la p√°gina');
console.log('3. Verifica que no aparezca Chat en el dashboard');

// Auto-ejecutar
console.log('\nüöÄ Ejecutando limpieza autom√°tica...');
eliminarTodoChat();
