/**
 * üîç VERIFICAR ESTADO ACTUAL DEL PROBLEMA
 * 
 * Este script te ayudar√° a ver exactamente qu√© est√° pasando
 * con los datos de estudiantes entre admin y profesor
 */

console.log('üîç VERIFICACI√ìN DEL ESTADO ACTUAL');

// Funci√≥n para verificar datos en localStorage
function verificarEstado() {
    console.log('\nüìä DATOS ACTUALES EN LOCALSTORAGE:');
    
    const users = JSON.parse(localStorage.getItem('smart-student-users') || '[]');
    const studentAssignments = JSON.parse(localStorage.getItem('smart-student-student-assignments') || '[]');
    const courses = JSON.parse(localStorage.getItem('smart-student-courses') || '[]');
    const sections = JSON.parse(localStorage.getItem('smart-student-sections') || '[]');
    
    console.log(`   ‚Ä¢ ${users.length} usuarios total`);
    console.log(`   ‚Ä¢ ${studentAssignments.length} asignaciones de estudiantes`);
    console.log(`   ‚Ä¢ ${courses.length} cursos`);
    console.log(`   ‚Ä¢ ${sections.length} secciones`);
    
    // Verificar estudiantes
    const students = users.filter(u => u.role === 'student');
    console.log(`\nüë• ESTUDIANTES (${students.length}):`);
    
    students.forEach(student => {
        console.log(`   üë§ ${student.displayName || student.username}:`);
        console.log(`      ‚Ä¢ ID: ${student.id}`);
        console.log(`      ‚Ä¢ activeCourses: ${JSON.stringify(student.activeCourses || [])}`);
        console.log(`      ‚Ä¢ sectionName: "${student.sectionName || 'N/A'}"`);
    });
    
    // Verificar 5to B√°sico espec√≠ficamente
    const quintoBasico = courses.find(c => c.name === '5to B√°sico');
    if (quintoBasico) {
        console.log(`\nüìñ CURSO: 5to B√°sico (ID: ${quintoBasico.id})`);
        
        const secciones5to = sections.filter(s => s.courseId === quintoBasico.id);
        console.log(`   Secciones encontradas: ${secciones5to.length}`);
        
        secciones5to.forEach(seccion => {
            console.log(`\n   üìö SECCI√ìN ${seccion.name} (ID: ${seccion.id}):`);
            
            // Estudiantes asignados seg√∫n student-assignments
            const estudiantesAsignados = studentAssignments
                .filter(a => a.courseId === quintoBasico.id && a.sectionId === seccion.id)
                .map(a => {
                    const student = users.find(u => u.id === a.studentId);
                    return {
                        name: student ? (student.displayName || student.username) : 'Desconocido',
                        id: a.studentId,
                        student
                    };
                });
            
            console.log(`      Seg√∫n student-assignments: ${estudiantesAsignados.length} estudiantes`);
            estudiantesAsignados.forEach(est => {
                console.log(`         ‚Ä¢ ${est.name} (ID: ${est.id})`);
            });
            
            // Estudiantes seg√∫n perfiles
            const estudiantesPerfiles = students.filter(student => {
                const activeCourses = student.activeCourses || [];
                return activeCourses.some(course => 
                    course.includes('5to B√°sico') && course.includes(`Secci√≥n ${seccion.name}`)
                );
            });
            
            console.log(`      Seg√∫n perfiles usuarios: ${estudiantesPerfiles.length} estudiantes`);
            estudiantesPerfiles.forEach(est => {
                console.log(`         ‚Ä¢ ${est.displayName || est.username} (ID: ${est.id})`);
            });
            
            // Detectar inconsistencias
            if (estudiantesAsignados.length !== estudiantesPerfiles.length) {
                console.log(`      ‚ö†Ô∏è INCONSISTENCIA DETECTADA!`);
                console.log(`         Asignaciones: ${estudiantesAsignados.length} vs Perfiles: ${estudiantesPerfiles.length}`);
            }
        });
    }
    
    console.log('\nüîç AN√ÅLISIS COMPLETADO');
    console.log('üìù Si ves inconsistencias, ejecuta el script de sincronizaci√≥n');
}

// Ejecutar verificaci√≥n
verificarEstado();

// Hacer funci√≥n disponible globalmente
window.verificarEstado = verificarEstado;

console.log('\nüìã FUNCI√ìN DISPONIBLE: verificarEstado()');
